# ===================================
#       PHASE 1 - BUILDER
# ===================================

FROM node:18 AS BUILD_IMAGE

ENV NODE_OPTIONS=--max_old_space_size=8192

# Because ALPINE base image don't have python pre-installed 
# RUN apk update && apk add bash curl python3 make g++ && rm -rf /var/cache/apk/*

WORKDIR /usr/src

COPY ./package.json .

# PNPM
RUN npm i pnpm -g
RUN pnpm install

# Prisma
COPY ./prisma .
RUN npm run prisma

# RUN pnpm i diginext-utils
# RUN yarn add diginext-utils

# RUN pnpm add ./prisma/prisma-client
# RUN pnpm exec prisma generate

# apps
COPY . .
COPY ./.env.dev ./.env

# Start building
# RUN npm run build-all
# RUN yarn build
RUN pnpm build

# install node-prune (https://github.com/tj/node-prune)
# RUN curl -sf https://gobinaries.com/tj/node-prune | sh

# run node-prune to scan for other unused node_modules packages
# RUN /usr/local/bin/node-prune

# ===================================
#       PHASE 2 - RUNNER
# ===================================

FROM node:18 AS RUNNER

# Puppeteer: Install "chromium"
RUN apt-get update && \
    apt-get install -y gnupg chromium && \
    rm -rf /var/lib/apt/lists/*

# Puppeteer: chromium execution path
ENV CHROMIUM_PATH /usr/bin/chromium
RUN chmod +x /usr/bin/chromium

# Don't run production as root
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs
# USER nextjs

WORKDIR /usr/app

# Only copy build files & neccessary files to run:
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/node_modules ./node_modules
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/next.config.js .
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/.next/standalone .
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/.next/static ./.next/static
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/public ./public
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/prisma ./prisma
# # COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/next-i18next.config.js .
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/.env .
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/server.js .
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/package.json .
# COPY --from=BUILD_IMAGE --chown=nextjs:nodejs /usr/src/next-sitemap.config.js .

COPY --from=BUILD_IMAGE /usr/src/node_modules ./node_modules
COPY --from=BUILD_IMAGE /usr/src/next.config.js .
COPY --from=BUILD_IMAGE /usr/src/.next/standalone .
COPY --from=BUILD_IMAGE /usr/src/.next/static ./.next/static
COPY --from=BUILD_IMAGE /usr/src/public ./public
COPY --from=BUILD_IMAGE /usr/src/prisma ./prisma
# COPY --from=BUILD_IMAGE /usr/src/next-i18next.config.js .
COPY --from=BUILD_IMAGE /usr/src/.env .
COPY --from=BUILD_IMAGE /usr/src/server.js .
COPY --from=BUILD_IMAGE /usr/src/package.json .
COPY --from=BUILD_IMAGE /usr/src/next-sitemap.config.js .

EXPOSE 3000 80

# CMD npm run start
CMD node .next/standalone/server.js